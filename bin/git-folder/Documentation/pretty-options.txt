--pretty[=<format>]::
--format=<format>::

	Pretty-print the contents of the commit logs in a given format,
	where '<format>' can be one of 'oneline', 'short', 'medium',
	'full', 'fuller', 'email', 'raw' and 'format:<string>'.  See
	the "PRETTY FORMATS" section for some additional details for each
	format.  When omitted, the format defaults to 'medium'.
+
Note: you can specify the default pretty format in the repository
configuration (see linkgit:git-config[1]).

--abbrev-commit::
	Instead of showing the full 40-byte hexadecimal commit object
	name, show only a partial prefix.  Non default number of
	digits can be specified with "--abbrev=<n>" (which also modifies
	diff output, if it is displayed).
+
This should make "--pretty=oneline" a whole lot more readable for
people using 80-column terminals.

--oneline::
	This is a shorthand for "--pretty=oneline --abbrev-commit"
	used together.

--encoding[=<encoding>]::
	The commit objects record the encoding used for the log message
	in their encoding header; this option can be used to tell the
	command to re-code the commit log message in the encoding
	preferred by the user.  For non plumbing commands this
	defaults to UTF-8.

--no-notes::
--show-notes[=<ref>]::
	Show the notes (see linkgit:git-notes[1]) that annotate the
	commit, when showing the commit log message.  This is the default
	for `git log`, `git show` and `git whatchanged` commands when
	there is no `--pretty`, `--format` nor `--oneline` option is
	given on the command line.
+
With an optional argument, add this ref to the list of notes.  The ref
is taken to be in `refs/notes/` if it is not qualified.

--[no-]standard-notes::
	Enable or disable populating the notes ref list from the
	'core.notesRef' and 'notes.displayRef' variables (or
	corresponding environment overrides).  Enabled by default.
	See linkgit:git-config[1].
